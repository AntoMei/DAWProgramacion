better-ticket-machine
En este proyecto, realiza las siguientes modificaciones:
1. Escribe un método llamado emptyMachine, diseñado para simular el vaciado del
dinero acumulado en la máquina. Este método debe reinicializar el campo total a
cero, pero también devolver el valor que tuviera almacenado en total antes de la
reinicialización.
2. Escribe de nuevo el método  printTicket  para que declare una variable local,
amountToPay, que debe indicar el dinero que falta para completar el precio del
billete. Dicha variable deberá inicializarse para que contenga la diferencia entre
price y balance. Reescribe la comprobación en la instrucción condicional para que
se compruebe el valor de amountToPay. Si su valor es menor o igual que cero,
deberá imprimirse el billete; en caso contrario, hay que imprimir un mensaje de
error que especifique la cantidad de dinero que falta por introducir. Comprueba
este nuevo método creando varias máquinas e intentando imprimir el billete
cuando   no   se   ha   introducido   la   cantidad   correcta   y   cuando   sí   que   se   ha
introducido.
3. Supongamos   que   queremos   permitir   que   la   máquina   imprima   billetes   con
descuento (20%) que se aplica cuando los usuarios pulsan un botón en la máquina
física. Implementa un método llamado  setDiscount, que realice esta operación.
Antes de empezar a hacerlo piensa bien qué campos nuevos necesitas y qué
métodos deberías cambiar.